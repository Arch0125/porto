diff --git a/dist/index.css b/dist/index.css
index 4af35cb02a486591dcaa55c3b7950680d0b5da36..6d3367a793f2beb673c58461b9e9fe21d91dd618 100644
--- a/dist/index.css
+++ b/dist/index.css
@@ -2063,7 +2063,6 @@
   z-index: 2147483646;
 }
 [data-rk] ._9pm4ki5 {
-  animation: _9pm4ki0 350ms cubic-bezier(.15, 1.15, 0.6, 1.00), _9pm4ki1 150ms ease;
   max-width: 100vw;
 }
 
@@ -2071,18 +2070,13 @@
 [data-rk] ._1ckjpok1 {
   box-sizing: content-box;
   max-width: 100vw;
-  width: 360px;
 }
 [data-rk] ._1ckjpok2 {
   width: 100vw;
 }
 [data-rk] ._1ckjpok3 {
-  min-width: 720px;
-  width: 720px;
 }
 [data-rk] ._1ckjpok4 {
-  min-width: 368px;
-  width: 368px;
 }
 [data-rk] ._1ckjpok6 {
   border-width: 0px;
@@ -2091,14 +2085,10 @@
 }
 @media screen and (min-width: 768px) {
   [data-rk] ._1ckjpok1 {
-    width: 360px;
   }
   [data-rk] ._1ckjpok2 {
-    width: 480px;
   }
   [data-rk] ._1ckjpok4 {
-    min-width: 368px;
-    width: 368px;
   }
 }
 @media screen and (max-width: 767px) {
diff --git a/dist/index.js b/dist/index.js
index 99af3d7bbc46fbafbf17e788628cab625bc2750e..fd6716a9542f1391bd4a0ca9c76dd77903388d16 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -2724,47 +2724,12 @@ function FocusTrap(props) {
 }
 
 // src/components/Dialog/Dialog.tsx
-var stopPropagation = (event) => event.stopPropagation();
-function Dialog({ children, onClose, open, titleId }) {
-  useEffect11(() => {
-    const handleEscape = (event) => open && event.key === "Escape" && onClose();
-    document.addEventListener("keydown", handleEscape);
-    return () => document.removeEventListener("keydown", handleEscape);
-  }, [open, onClose]);
-  const [bodyScrollable, setBodyScrollable] = useState9(true);
-  useEffect11(() => {
-    setBodyScrollable(
-      getComputedStyle(window.document.body).overflow !== "hidden"
-    );
-  }, []);
-  const handleBackdropClick = useCallback6(() => onClose(), [onClose]);
+function Dialog({ children, open }) {
   const themeRootProps = useThemeRootProps();
-  const mobile = isMobile();
-  return /* @__PURE__ */ React23.createElement(React23.Fragment, null, open ? createPortal(
-    /* @__PURE__ */ React23.createElement(RemoveScroll, { enabled: bodyScrollable }, /* @__PURE__ */ React23.createElement(Box, { ...themeRootProps }, /* @__PURE__ */ React23.createElement(
-      Box,
-      {
-        ...themeRootProps,
-        alignItems: mobile ? "flex-end" : "center",
-        "aria-labelledby": titleId,
-        "aria-modal": true,
-        className: overlay,
-        onClick: handleBackdropClick,
-        position: "fixed",
-        role: "dialog"
-      },
-      /* @__PURE__ */ React23.createElement(
-        FocusTrap,
-        {
-          className: content,
-          onClick: stopPropagation,
-          role: "document"
-        },
+  return /* @__PURE__ */ React23.createElement(React23.Fragment, null, open ? /* @__PURE__ */ React23.createElement(Box, { ...themeRootProps }, 
         children
       )
-    ))),
-    document.body
-  ) : null);
+   : null);
 }
 
 // src/components/Dialog/DialogContent.tsx
@@ -5806,7 +5771,6 @@ function DesktopOptions({ onClose }) {
         {
           display: "flex",
           flexDirection: "column",
-          style: { minHeight: compactModeEnabled ? 396 : 432 }
         },
         /* @__PURE__ */ React53.createElement(
           Box,
@@ -6281,10 +6245,16 @@ function ConnectOptions({ onClose }) {
 }
 
 // src/components/ConnectModal/ConnectModal.tsx
-function ConnectModal({ onClose, open }) {
+function ConnectModal({ onClose, open, openConnectModal }) {
   const titleId = "rk_connect_title";
   const connectionStatus = useConnectionStatus();
-  const { disconnect } = useDisconnect3();
+  const { disconnect } = useDisconnect3({
+    mutation: {
+      onSuccess() {
+        openConnectModal()
+      }
+    }
+  });
   const { isConnecting } = useAccount12();
   const onAuthCancel = React57.useCallback(() => {
     onClose();
@@ -6305,8 +6275,8 @@ function ConnectModal({ onClose, open }) {
 }
 
 // src/components/RainbowKitProvider/ModalContext.tsx
-function useModalStateValue() {
-  const [isModalOpen, setModalOpen] = useState14(false);
+function useModalStateValue(defaultValue = false) {
+  const [isModalOpen, setModalOpen] = useState14(defaultValue);
   return {
     closeModal: useCallback10(() => setModalOpen(false), []),
     isModalOpen,
@@ -6316,7 +6286,7 @@ function useModalStateValue() {
 var ModalContext = createContext12({
   accountModalOpen: false,
   chainModalOpen: false,
-  connectModalOpen: false,
+  connectModalOpen: true,
   isWalletConnectModalOpen: false,
   setIsWalletConnectModalOpen: () => {
   }
@@ -6326,7 +6296,7 @@ function ModalProvider({ children }) {
     closeModal: closeConnectModal,
     isModalOpen: connectModalOpen,
     openModal: openConnectModal
-  } = useModalStateValue();
+  } = useModalStateValue(true);
   const {
     closeModal: closeAccountModal,
     isModalOpen: accountModalOpen,
@@ -6389,7 +6359,7 @@ function ModalProvider({ children }) {
       )
     },
     children,
-    /* @__PURE__ */ React58.createElement(ConnectModal, { onClose: closeConnectModal, open: connectModalOpen }),
+    /* @__PURE__ */ React58.createElement(ConnectModal, { onClose: closeConnectModal, open: connectModalOpen, openConnectModal }),
     /* @__PURE__ */ React58.createElement(AccountModal, { onClose: closeAccountModal, open: accountModalOpen }),
     /* @__PURE__ */ React58.createElement(ChainModal, { onClose: closeChainModal, open: chainModalOpen })
   );
